<Window x:Class="CardCreator.MainWindow"
 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
 xmlns:sys="clr-namespace:System;assembly=mscorlib"
 xmlns:local="clr-namespace:CardCreator"
 Title="Card Template Editor (Advanced)" Height="820" Width="1320"
 Background="#FFF9F9FB" KeyDown="Window_KeyDown">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <local:GridSizeToBoolConverter x:Key="GridSizeToBool"/>
        <local:EnumToBoolConverter x:Key="EnumToBool"/>
    </Window.Resources>
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Save..." Command="{Binding SaveCommand}">
                    <MenuItem.Icon>
                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE74E;" FontSize="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Load..." Command="{Binding LoadCommand}">
                    <MenuItem.Icon>
                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE8E5;" FontSize="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Export XAML..." Command="{Binding ExportXamlCommand}">
                    <MenuItem.Icon>
                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xEDE1;" FontSize="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Save _Data CSV..." Command="{Binding SaveCsvCommand}"/>
                <MenuItem Header="Load _Data CSV..." Command="{Binding LoadCsvCommand}"/>
                <Separator/>
                <MenuItem Header="Save Card _Images..." Command="{Binding SaveImagesCommand}"/>
                <MenuItem Header="Save Card _Sheets..." Command="{Binding SaveSheetsCommand}"/>
            </MenuItem>
            <MenuItem Header="_Insert">
                <MenuItem Header="Add _Text" Command="{Binding AddTextCommand}">
                    <MenuItem.Icon>
                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE8D2;" FontSize="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Add _Image" Command="{Binding AddImageCommand}">
                    <MenuItem.Icon>
                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE8B9;" FontSize="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Align">
                    <MenuItem Header="Align _Left" Command="{Binding AlignLeftCommand}"/>
                    <MenuItem Header="Align _Center" Command="{Binding AlignCenterCommand}"/>
                    <MenuItem Header="Align _Right" Command="{Binding AlignRightCommand}"/>
                    <Separator/>
                    <MenuItem Header="Align _Top" Command="{Binding AlignTopCommand}"/>
                    <MenuItem Header="Align _Middle" Command="{Binding AlignMiddleCommand}"/>
                    <MenuItem Header="Align _Bottom" Command="{Binding AlignBottomCommand}"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Distribute _Horizontally" Command="{Binding DistributeHCommand}"/>
                <MenuItem Header="Distribute _Vertically" Command="{Binding DistributeVCommand}"/>
                <Separator/>
                <MenuItem Header="_Bring Forward" Command="{Binding BringForwardCommand}"/>
                <MenuItem Header="_Send Backward" Command="{Binding SendBackwardCommand}"/>
                <Separator/>
                <MenuItem Header="Card &amp; Sheet Settings..." Command="{Binding SettingsCommand}"/>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="_Snap" IsCheckable="True" IsChecked="{Binding SnapEnabled}"/>
                <MenuItem Header="Show _Guidelines" IsCheckable="True" IsChecked="{Binding GuidelinesEnabled}"/>
                <MenuItem Header="_Grid Size">
                    <MenuItem Header="5" IsCheckable="True" IsChecked="{Binding GridSize, Converter={StaticResource GridSizeToBool}, ConverterParameter=5}"/>
                    <MenuItem Header="10" IsCheckable="True" IsChecked="{Binding GridSize, Converter={StaticResource GridSizeToBool}, ConverterParameter=10}"/>
                    <MenuItem Header="20" IsCheckable="True" IsChecked="{Binding GridSize, Converter={StaticResource GridSizeToBool}, ConverterParameter=20}"/>
                    <MenuItem Header="25" IsCheckable="True" IsChecked="{Binding GridSize, Converter={StaticResource GridSizeToBool}, ConverterParameter=25}"/>
                </MenuItem>
                <MenuItem Header="_Units">
                    <MenuItem Header="_Inches" IsCheckable="True" IsChecked="{Binding Units, Converter={StaticResource EnumToBool}, ConverterParameter=Inches}"/>
                    <MenuItem Header="_Millimeters" IsCheckable="True" IsChecked="{Binding Units, Converter={StaticResource EnumToBool}, ConverterParameter=Millimeters}"/>
                    <MenuItem Header="_Device Independent" IsCheckable="True" IsChecked="{Binding Units, Converter={StaticResource EnumToBool}, ConverterParameter=DeviceIndependent}"/>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="360"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Background="#FFEFF1F4">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <local:Ruler x:Name="RulerH" Grid.Row="0" Grid.Column="1" Height="20" Orientation="Horizontal" Units="{Binding Units}"/>
                    <local:Ruler x:Name="RulerV" Grid.Row="1" Grid.Column="0" Width="20" Orientation="Vertical" Units="{Binding Units}"/>
                    <Border Grid.Row="1" Grid.Column="1" Width="{Binding CardWidth}" Height="{Binding CardHeight}" CornerRadius="24" BorderBrush="#FFCCD1D8" BorderThickness="2" Background="{StaticResource CheckerBrush}">
                        <Canvas x:Name="CardCanvas" Width="{Binding CardWidth}" Height="{Binding CardHeight}" Background="Transparent" Focusable="True"
              MouseLeftButtonDown="CardCanvas_MouseLeftButtonDown"
              MouseMove="CardCanvas_MouseMove"
              MouseLeftButtonUp="CardCanvas_MouseLeftButtonUp"
              MouseLeave="CardCanvas_MouseLeave">
                            <Line x:Name="GuideH" Stroke="#660078D7" StrokeThickness="1.5" Visibility="Collapsed"/>
                            <Line x:Name="GuideV" Stroke="#660078D7" StrokeThickness="1.5" Visibility="Collapsed"/>
                            <Rectangle x:Name="Marquee" Stroke="#770078D7" StrokeDashArray="3,2" Fill="#220078D7" Visibility="Collapsed"/>
                        </Canvas>
                    </Border>
                </Grid>
            </ScrollViewer>
            <Border Grid.Column="1" Margin="12,0,0,0" Padding="12" Background="White" BorderBrush="#FFCCD1D8" BorderThickness="1" CornerRadius="12">
                <TabControl>
                    <TabItem Header="Inspector">
                        <StackPanel>
                            <ItemsControl ItemsSource="{Binding SelectedItems}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Tag}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <StackPanel DataContext="{Binding Inspector}" Margin="0,12,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                <!--0-->
                                <RowDefinition Height="Auto"/>
                <!--1-->
                                <RowDefinition Height="Auto"/>
                <!--2-->
                                <RowDefinition Height="Auto"/>
                <!--3-->
                                <RowDefinition Height="Auto"/>
                <!--4-->
                                <RowDefinition Height="Auto"/>
                <!--5-->
                                <RowDefinition Height="Auto"/>
                <!--6-->
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Name" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding ControlName, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="X" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding X, UpdateSourceTrigger=PropertyChanged, StringFormat=F0}" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="Y" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding Y, UpdateSourceTrigger=PropertyChanged, StringFormat=F0}" Grid.Row="2" Grid.Column="1"/>
                            <TextBlock Text="Width" Grid.Row="3" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding WidthInput, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Grid.Column="1"/>
                            <TextBlock Text="Height" Grid.Row="4" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding HeightInput, UpdateSourceTrigger=PropertyChanged}" Grid.Row="4" Grid.Column="1"/>
                            <TextBlock Text="Rotation" Grid.Row="5" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding Rotation, UpdateSourceTrigger=PropertyChanged, StringFormat=F0}" Grid.Row="5" Grid.Column="1"/>
                            <TextBlock Text="Hidden" Grid.Row="6" Grid.Column="0" VerticalAlignment="Center"/>
                            <CheckBox IsChecked="{Binding IsHidden, UpdateSourceTrigger=PropertyChanged}" Grid.Row="6" Grid.Column="1" IsEnabled="{Binding Element, Converter={StaticResource NullToBoolInverse}}"/>
                        </Grid>
                        <Grid Visibility="{Binding IsText, Converter={StaticResource BoolToVis}}" Margin="0,10,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Text" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1" AcceptsReturn="True"/>
                            <TextBlock Text="Font Size" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding FontSize, UpdateSourceTrigger=PropertyChanged, StringFormat=F0}" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="Font Family" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"/>
                            <ComboBox ItemsSource="{Binding FontFamilies}" SelectedItem="{Binding FontFamily, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="1" DisplayMemberPath="Source"/>
                            <TextBlock Text="Font Style" Grid.Row="3" Grid.Column="0" VerticalAlignment="Center"/>
                            <ComboBox SelectedItem="{Binding FontStyleOption, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Grid.Column="1">
                                <sys:String>None</sys:String>
                                <sys:String>Italic</sys:String>
                                <sys:String>Bold</sys:String>
                                <sys:String>Bold Italic</sys:String>
                            </ComboBox>
                            <TextBlock Text="Text Align" Grid.Row="4" Grid.Column="0" VerticalAlignment="Center"/>
                            <ComboBox SelectedItem="{Binding TextAlignment, UpdateSourceTrigger=PropertyChanged}" Grid.Row="4" Grid.Column="1">
                                <TextAlignment>Left</TextAlignment>
                                <TextAlignment>Center</TextAlignment>
                                <TextAlignment>Right</TextAlignment>
                                <TextAlignment>Justify</TextAlignment>
                            </ComboBox>
                            <TextBlock Text="Color (#RRGGBB)" Grid.Row="5" Grid.Column="0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding ForegroundHex, UpdateSourceTrigger=PropertyChanged}" Grid.Row="5" Grid.Column="1"/>
                        </Grid>
                        <Grid Visibility="{Binding IsImage, Converter={StaticResource BoolToVis}}" Margin="0,10,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Image Source" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1">
                                <TextBox Width="200" Text="{Binding ImageSourcePath, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button Content="Browse…" Click="BrowseImage_Click" Margin="6,0,0,0"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Cards">
                        <StackPanel>
                            <ListView ItemsSource="{Binding Cards}" SelectedItem="{Binding SelectedCard}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox Width="100" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                                            <TextBox Width="40" Margin="6,0,0,0" Text="{Binding Quantity, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                <Button Content="Add" Command="{Binding AddCardCommand}" Width="60"/>
                                <Button Content="Remove" Command="{Binding RemoveCardCommand}" Width="60" Margin="8,0,0,0"/>
                            </StackPanel>
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </Border>
        </Grid>
    </DockPanel>
</Window>
